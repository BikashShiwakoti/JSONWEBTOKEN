{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bikas\\\\Authenticate\\\\frontend\\\\src\\\\components\\\\Display.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Display = () => {\n  _s();\n  const [photo, setPhoto] = useState();\n  useEffect(() => {\n    // Make a GET request to fetch data from the API\n    const fetchedDta = fetch('http://localhost:4000/getUserData', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken // Include the JWT access token in the Authorization header\n      }\n    });\n    const userImage = fetchedDta.json();\n    setPhoto(userImage.imagePath).catch(error => {\n      // Handle any errors that occurred during the fetch request\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  }, [accessToken]); // Add accessToken to the dependency array\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Display\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      src: photo,\n      alt: \"image\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true);\n};\n_s(Display, \"ML/BFYuxHsOc+tdCEOZwN8aAy6w=\");\n_c = Display;\nexport default Display;\nvar _c;\n$RefreshReg$(_c, \"Display\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Display","_s","photo","setPhoto","useEffect","fetchedDta","fetch","method","headers","accessToken","userImage","json","imagePath","catch","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/bikas/Authenticate/frontend/src/components/Display.js"],"sourcesContent":["import React, { useState } from 'react'\r\n\r\nconst Display = () => {\r\n    const [photo, setPhoto] = useState()\r\n    useEffect(() => {\r\n        // Make a GET request to fetch data from the API\r\n         const fetchedDta = fetch('http://localhost:4000/getUserData', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + accessToken // Include the JWT access token in the Authorization header\r\n            }\r\n        })\r\n            const userImage = fetchedDta.json()\r\n            setPhoto(userImage.imagePath)\r\n\r\n\r\n            .catch(error => {\r\n                // Handle any errors that occurred during the fetch request\r\n                console.error('There was a problem with the fetch operation:', error);\r\n            });\r\n    }, [ accessToken]); // Add accessToken to the dependency array\r\n\r\n   \r\n  return (\r\n    <>\r\n     <div>Display</div>\r\n     <img src={photo} alt='image'/>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Display"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEvC,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGR,QAAQ,CAAC,CAAC;EACpCS,SAAS,CAAC,MAAM;IACZ;IACC,MAAMC,UAAU,GAAGC,KAAK,CAAC,mCAAmC,EAAE;MAC3DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,eAAe,EAAE,SAAS,GAAGC,WAAW,CAAC;MAC7C;IACJ,CAAC,CAAC;IACE,MAAMC,SAAS,GAAGL,UAAU,CAACM,IAAI,CAAC,CAAC;IACnCR,QAAQ,CAACO,SAAS,CAACE,SAAS,CAAC,CAG5BC,KAAK,CAACC,KAAK,IAAI;MACZ;MACAC,OAAO,CAACD,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACzE,CAAC,CAAC;EACV,CAAC,EAAE,CAAEL,WAAW,CAAC,CAAC,CAAC,CAAC;;EAGtB,oBACEZ,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACCnB,OAAA;MAAAmB,QAAA,EAAK;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAClBvB,OAAA;MAAKwB,GAAG,EAAEnB,KAAM;MAACoB,GAAG,EAAC;IAAO;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC;EAAA,eAC7B,CAAC;AAEP,CAAC;AAAAnB,EAAA,CA3BKD,OAAO;AAAAuB,EAAA,GAAPvB,OAAO;AA6Bb,eAAeA,OAAO;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}