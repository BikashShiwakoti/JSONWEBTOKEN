{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bikas\\\\Authenticate\\\\frontend\\\\src\\\\components\\\\Display.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst YourComponent = () => {\n  _s();\n  const navigate = useNavigate();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(true); // Track loading state\n  const [error, setError] = useState(null);\n  const accessToken = localStorage.getItem('accessToken');\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const itemDataResponse = await fetch('http://localhost:4000/getUserData', {\n          method: 'GET',\n          headers: {\n            'Authorization': `Bearer ${accessToken}`\n          }\n        });\n        if (!itemDataResponse.ok) {\n          console.log('Error fetching items');\n          return;\n        }\n        const itemData = await itemDataResponse.json();\n        setItems(itemData); // Update state with fetched data\n        setLoading(false); // Update loading state after fetching data\n      } catch (error) {\n        setError(error.message || 'An error occurred while fetching profile data');\n        setLoading(false); // Update loading state if there's an error\n      }\n    };\n    fetchData();\n  }, [accessToken, navigate]);\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this); // Show loading indicator while fetching data\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: String(error)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-center gap-10 flex-wrap\",\n      children: items.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"h-auto w-80 flex items-center justify-center m-5 border-8 border-cyan-400 rounded-lg\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            className: \"m-5 h-64 w-64\",\n            src: `http://localhost:4000/${item.imagePaths.imagePath}`,\n            alt: `Image ${index}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(YourComponent, \"R2y4rIPL+f8PdMOQDCWgFx9lYhI=\", false, function () {\n  return [useNavigate];\n});\n_c = YourComponent;\nexport default YourComponent;\nvar _c;\n$RefreshReg$(_c, \"YourComponent\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","YourComponent","_s","navigate","items","setItems","loading","setLoading","error","setError","accessToken","localStorage","getItem","fetchData","itemDataResponse","fetch","method","headers","ok","console","log","itemData","json","message","children","fileName","_jsxFileName","lineNumber","columnNumber","String","className","map","item","index","src","imagePaths","imagePath","alt","_c","$RefreshReg$"],"sources":["C:/Users/bikas/Authenticate/frontend/src/components/Display.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst YourComponent = () => {\r\n  const navigate = useNavigate();\r\n  const [items, setItems] = useState([]);\r\n  const [loading, setLoading] = useState(true); // Track loading state\r\n  const [error, setError] = useState(null);\r\n\r\n  const accessToken = localStorage.getItem('accessToken');\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const itemDataResponse = await fetch('http://localhost:4000/getUserData', {\r\n          method: 'GET',\r\n          headers: {\r\n            'Authorization': `Bearer ${accessToken}`\r\n          }\r\n        });\r\n\r\n        if (!itemDataResponse.ok) {\r\n          console.log('Error fetching items');\r\n          return;\r\n        }\r\n\r\n        const itemData = await itemDataResponse.json();\r\n        setItems(itemData); // Update state with fetched data\r\n        setLoading(false); // Update loading state after fetching data\r\n\r\n      } catch (error) {\r\n        setError(error.message || 'An error occurred while fetching profile data');\r\n        setLoading(false); // Update loading state if there's an error\r\n      }\r\n    };\r\n    \r\n    fetchData();\r\n  }, [accessToken, navigate]);\r\n\r\n  if (loading) {\r\n    return <div>Loading...</div>; // Show loading indicator while fetching data\r\n  }\r\n\r\n  if (error) {\r\n    return <div>{String(error)}</div>;\r\n  }\r\n  \r\n  return (\r\n    <div>\r\n      <div  className='flex items-center justify-center gap-10 flex-wrap'>\r\n        {items.map((item, index) => (\r\n          <div key={index} className='h-auto w-80 flex items-center justify-center m-5 border-8 border-cyan-400 rounded-lg'>\r\n            <div>\r\n              <img  className='m-5 h-64 w-64' src={`http://localhost:4000/${item.imagePaths.imagePath}`} alt={`Image ${index}`} />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default YourComponent;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}