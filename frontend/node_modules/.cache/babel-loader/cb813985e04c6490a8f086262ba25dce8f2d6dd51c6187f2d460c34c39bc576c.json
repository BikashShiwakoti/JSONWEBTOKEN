{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bikas\\\\Authenticate\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const accessToken = localStorage.getItem('accessToken');\n  let navigate = useNavigate();\n  useEffect(() => {\n    // Make a GET request to fetch data from the API\n    fetch('http://localhost:4000/home', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken // Include the JWT access token in the Authorization header\n      }\n    }).then(response => {\n      if (!response.ok) {\n        navigate('/login');\n        throw new Error('Network response was not ok');\n      }\n      return response.json(); // Parse the JSON response\n    }).then(data => {\n      // Handle the data received from the API\n      console.log(data);\n    }).catch(error => {\n      // Handle any errors that occurred during the fetch request\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Home","_s","accessToken","localStorage","getItem","navigate","fetch","method","headers","then","response","ok","Error","json","data","console","log","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bikas/Authenticate/frontend/src/components/Home.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nconst Home = () => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n     let navigate = useNavigate();\r\nuseEffect(() => {\r\n    // Make a GET request to fetch data from the API\r\nfetch('http://localhost:4000/home', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Authorization': 'Bearer ' + accessToken // Include the JWT access token in the Authorization header\r\n    }\r\n  })\r\n  .then(response => {\r\n    if (!response.ok) {\r\n        navigate('/login');\r\n      throw new Error('Network response was not ok');\r\n    }\r\n    return response.json(); // Parse the JSON response\r\n  })\r\n  .then(data => {\r\n    // Handle the data received from the API\r\n    console.log(data);\r\n  })\r\n  .catch(error => {\r\n    // Handle any errors that occurred during the fetch request\r\n    console.error('There was a problem with the fetch operation:', error);\r\n  });\r\n\r\n})\r\n\r\n    return (\r\n        <div>Home</div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACtD,IAAIC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EACjCD,SAAS,CAAC,MAAM;IACZ;IACJW,KAAK,CAAC,4BAA4B,EAAE;MAChCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACP,eAAe,EAAE,SAAS,GAAGN,WAAW,CAAC;MAC3C;IACF,CAAC,CAAC,CACDO,IAAI,CAACC,QAAQ,IAAI;MAChB,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACdN,QAAQ,CAAC,QAAQ,CAAC;QACpB,MAAM,IAAIO,KAAK,CAAC,6BAA6B,CAAC;MAChD;MACA,OAAOF,QAAQ,CAACG,IAAI,CAAC,CAAC,CAAC,CAAC;IAC1B,CAAC,CAAC,CACDJ,IAAI,CAACK,IAAI,IAAI;MACZ;MACAC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;IACnB,CAAC,CAAC,CACDG,KAAK,CAACC,KAAK,IAAI;MACd;MACAH,OAAO,CAACG,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACvE,CAAC,CAAC;EAEJ,CAAC,CAAC;EAEE,oBACInB,OAAA;IAAAoB,QAAA,EAAK;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEvB,CAAC;AAACtB,EAAA,CAhCID,IAAI;EAAA,QAEUJ,WAAW;AAAA;AAAA4B,EAAA,GAFzBxB,IAAI;AAkCV,eAAeA,IAAI;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}