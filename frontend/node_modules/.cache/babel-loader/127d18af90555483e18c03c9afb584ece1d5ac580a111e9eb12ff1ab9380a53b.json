{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\bikas\\\\Authenticate\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  const accessToken = localStorage.getItem('accessToken');\n  console.log(accessToken);\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Make a GET request to fetch data from the API\n    fetch('http://localhost:4000/home', {\n      method: 'GET',\n      headers: {\n        'Authorization': 'Bearer ' + accessToken // Include the JWT access token in the Authorization header\n      }\n    }).then(response => {\n      if (!response.ok) {\n        navigate('/login'); // Redirect to login page if response is not ok\n        throw new Error('Network response was not ok');\n      }\n    }).catch(error => {\n      // Handle any errors that occurred during the fetch request\n      console.error('There was a problem with the fetch operation:', error);\n    });\n  }, [accessToken]); // Add accessToken to the dependency array\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Home\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(Home, \"0pNeyzXk/ByIxyERsdaIrG6js9s=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useNavigate","jsxDEV","_jsxDEV","Home","_s","accessToken","localStorage","getItem","console","log","navigate","fetch","method","headers","then","response","ok","Error","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/bikas/Authenticate/frontend/src/components/Home.js"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n    const accessToken = localStorage.getItem('accessToken');\r\n    console.log(accessToken);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Make a GET request to fetch data from the API\r\n        fetch('http://localhost:4000/home', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Authorization': 'Bearer ' + accessToken // Include the JWT access token in the Authorization header\r\n            }\r\n        })\r\n        .then(response => {\r\n            if (!response.ok) {\r\n                navigate('/login'); // Redirect to login page if response is not ok\r\n                throw new Error('Network response was not ok');\r\n            }\r\n        })\r\n        \r\n        .catch(error => {\r\n            // Handle any errors that occurred during the fetch request\r\n            console.error('There was a problem with the fetch operation:', error);\r\n        });\r\n    }, [accessToken]); // Add accessToken to the dependency array\r\n\r\n    return (\r\n        <div>Home</div>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACf,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;EACvDC,OAAO,CAACC,GAAG,CAACJ,WAAW,CAAC;EACxB,MAAMK,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9BD,SAAS,CAAC,MAAM;IACZ;IACAY,KAAK,CAAC,4BAA4B,EAAE;MAChCC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,eAAe,EAAE,SAAS,GAAGR,WAAW,CAAC;MAC7C;IACJ,CAAC,CAAC,CACDS,IAAI,CAACC,QAAQ,IAAI;MACd,IAAI,CAACA,QAAQ,CAACC,EAAE,EAAE;QACdN,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;QACpB,MAAM,IAAIO,KAAK,CAAC,6BAA6B,CAAC;MAClD;IACJ,CAAC,CAAC,CAEDC,KAAK,CAACC,KAAK,IAAI;MACZ;MACAX,OAAO,CAACW,KAAK,CAAC,+CAA+C,EAAEA,KAAK,CAAC;IACzE,CAAC,CAAC;EACN,CAAC,EAAE,CAACd,WAAW,CAAC,CAAC,CAAC,CAAC;;EAEnB,oBACIH,OAAA;IAAAkB,QAAA,EAAK;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEvB,CAAC;AAACpB,EAAA,CA7BID,IAAI;EAAA,QAGWH,WAAW;AAAA;AAAAyB,EAAA,GAH1BtB,IAAI;AA+BV,eAAeA,IAAI;AAAC,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}